CARGO-FETCH(1)                                                  CARGO-FETCH(1)



NAME
       cargo-fetch - Fetch dependencies of a package from the network

SYNOPSIS
       cargo fetch [OPTIONS]

DESCRIPTION
       If a Cargo.lock file is available, this command will ensure that all of
       the git dependencies and/or registry dependencies are downloaded and
       locally available. Subsequent Cargo commands never touch the network
       after a cargo fetch unless the lock file changes.

       If the lock file is not available, then this command will generate the
       lock file before fetching the dependencies.

       If --target is not specified, then all target dependencies are fetched.

       See also the  cargo-prefetch <https://crates.io/crates/cargo-prefetch>
       plugin which adds a command to download popular crates. This may be
       useful if you plan to use Cargo without a network with the --offline
       flag.

OPTIONS
   Fetch options
       --target TRIPLE
           Fetch for the given architecture. The default is the host
           architecture. The general format of the triple is
           <arch><sub>-<vendor>-<sys>-<abi>. Run rustc --print target-list for
           a list of supported targets.

           This may also be specified with the build.target

           config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

           Note that specifying this flag makes Cargo run in a different mode
           where the target artifacts are placed in a separate directory. See
           the

           build cache
           <https://doc.rust-lang.org/cargo/guide/build-cache.html>
           documentation for more details.

   Display Options
       -v, --verbose
           Use verbose output. May be specified twice for "very verbose"
           output which includes extra output such as dependency warnings and
           build script output. May also be specified with the term.verbose

           config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

       -q, --quiet
           No output printed to stdout.

       --color WHEN
           Control when colored output is used. Valid values:

           o   auto (default): Automatically detect if color support is
               available on the terminal.

           o   always: Always display colors.

           o   never: Never display colors.

           May also be specified with the term.color

           config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

   Manifest Options
       --manifest-path PATH
           Path to the Cargo.toml file. By default, Cargo searches for the
           Cargo.toml file in the current directory or any parent directory.

       --frozen, --locked
           Either of these flags requires that the Cargo.lock file is
           up-to-date. If the lock file is missing, or it needs to be updated,
           Cargo will exit with an error. The --frozen flag also prevents
           Cargo from attempting to access the network to determine if it is
           out-of-date.

           These may be used in environments where you want to assert that the
           Cargo.lock file is up-to-date (such as a CI build) or want to avoid
           network access.

       --offline
           Prevents Cargo from accessing the network for any reason. Without
           this flag, Cargo will stop with an error if it needs to access the
           network and the network is not available. With this flag, Cargo
           will attempt to proceed without the network if possible.

           Beware that this may result in different dependency resolution than
           online mode. Cargo will restrict itself to crates that are
           downloaded locally, even if there might be a newer version as
           indicated in the local copy of the index. See the cargo-fetch(1)
           command to download dependencies before going offline.

           May also be specified with the net.offline  config value
           <https://doc.rust-lang.org/cargo/reference/config.html>.

   Common Options
       -h, --help
           Prints help information.

       -Z FLAG...
           Unstable (nightly-only) flags to Cargo. Run cargo -Z help for
           details.

ENVIRONMENT
       See  the reference
       <https://doc.rust-lang.org/cargo/reference/environment-variables.html>
       for details on environment variables that Cargo reads.

EXIT STATUS
       0
           Cargo succeeded.

       101
           Cargo failed to complete.

EXAMPLES
        1. Fetch all dependencies:

               cargo fetch

SEE ALSO
       cargo(1), cargo-update(1), cargo-generate-lockfile(1)



                                  2019-11-11                    CARGO-FETCH(1)
